* {
    padding: 0;
    margin: 0;
}

body {
    font-family: "Josefin Sans", sans-serif;
    box-sizing: border-box;
    display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
       background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
      overflow: hidden;
}

/* ================= Header ============ */
header {
    position: absolute;
    top: 0%;
    left: 0%;
    width: 100%;
    margin: 0;
    padding: 0;
}
/* navbar */
nav {
    display: flex;
    justify-content: center;
    align-items: center;
    color: #fff;
    float: right;
    margin: 60px 150px;
}
nav ul {
    list-style: none;
}
nav ul li {
    float: left;
    transition: 0.3s;
}
nav ul li a {
    text-decoration: none;
    color: #efeef5;
    transition: 0.5;
    font-size: 30px;
    margin-left: 16px;
}
nav ul li:hover a {
    text-decoration: none;
    color: #591bc5;
}
nav ul li:hover {
    height: 45px;
    padding-top: 30px;
    margin-top: -30px;
    background: #efeef5;
    text-decoration: none;
    transform: skew(15deg);
}
/* Logo */
.logo {
    float: left;
}
.logo img {
    height: 150px;
}
/* Header content & title & button*/
.header-content {
    margin-top: 15%;
    text-align: center;
    color: #efeef5;
}
.header-content h1 {
    text-transform: uppercase;
    font-size: 3em;
    letter-spacing: 1px;
}
.header-content p {
    font-size: 20px;
    line-height: 1.5;
    margin: 20px auto;
}
.header-content button {
    width: 140px;
    margin: 20px 10px;
    color: #591bc5;
    font-size: 17px;
    border: 1px solid #efeef5;
    font-weight: 500;
    background: #efeef5;
    border-radius: 20px;
    padding: 10px;
    cursor: pointer;
    transition: 0.3s;
}
.header-content button:hover {
    border-radius: 0;
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.star {
  $star-count: 50;
  --star-color: var(--primary-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random_range(500em, 750em) / 100};
      --top-offset: #{random_range(0vh, 10000vh) / 100};
      --fall-duration: #{random_range(6000, 12000s) / 1000};
      --fall-delay: #{random_range(0, 10000s) / 1000};
    }
  }

  &::before, &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%, 80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}





